#include <iostream>

using namespace std;

/*
	Find all prime numbers in an interval [0 ... n]
*/

/*
  								 			  /-------------------7------------------\
                    /------3-------\  /------3-------\   /------3-------\   /------3-------\
+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
|  x  |  x  |  2  |  3  |  x  |  5  |  x  |  7  |  x  |  x  |  x  | 11  |  x  | 13  |  x  | x   |
+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
				\----2----/   \----2----/ \----2----/ \----2----/ \----2----/ \----2----/
								 \---------------5------------/ \---------------5------------/

+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
|  0  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  | 10  | 11  | 12  | 13  | 14  | 15  |
+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
|  t  |  t  |  f  |  f  |  f  |  f  |  f  |  f  |  f  |  f  |  f  | f   |  f  |  f  |  f  |  f  |
+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+
*/

void sieve(bool notPrime[], int n) {
	for (int i = 2; i < n; i++) {
		if (!notPrime[i]) {
			for (int j = i + i; j < n; j += i) {
				notPrime[j] = true;
			}
		}
	}
}

void printPrime(bool notPrime[], int n) {
	for (int i = 0; i < n; i++) {
		if (!notPrime[i]) {
			cout << i << " ";
		}
	}
	cout << endl;
}

int main() {
	const int endOfInterval = 10000;

	bool numbers[endOfInterval] = {true, true, false};
	sieve(numbers, endOfInterval);
	printPrime(numbers, endOfInterval);

	return 0;
}








